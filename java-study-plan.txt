Как стать Java Junior с нуля / Как стать программистом с нуля / Полный план https://www.youtube.com/watch?v=yyLVNUUFFnA

В ролике я расскажу о том, что должен знать Junior Java разработчик в контексте самого языка Java, чтобы быть готовым пройти собеседование на эту позицию в любую компанию и успешно выполнять ежедневные задачи в этой роли. Важно подчеркнуть, что все эти вещи относятся только к Java. Существует еще ряд некоторых технологий и инструментов, о которых было бы здорово иметь представление при устройстве на работу, но о них стоит говорить отдельно. 
Я надеюсь, что это простое руководство поможет начинающим разработчикам выстроить достойный план обучения и на каждом его этапе понимать, почему они делают именно это и куда именно двигаются. 

00:00 Intro
02:01 Java core
06:50 Algorythms & Data Structures
08:29 SQL & JDBC
10:40 HTTP & Servlets
11:56 Maven & Gradle
14:52 Spring
16:24 JPA & Hibernate
18:13 Testing
19:50 Bonus

Java Core:
Основы Java:  https://clck.ru/aj6Bc alishev - Java для начинающих
Углубленная Java: https://clck.ru/atH8r Заур Трегулов - Прокаченная java
Упражнения:  https://codingbat.com/java (eng), https://habr.com/ru/post/440436/, https://github.com/allicen/Java-1000
Платный курс: javarush.ru

Книги:
Начинающий: Изучаем Java, Берт Бейтс и Кэти Сьерра
Обычный: Философия Java, Брюс Эккель
Опытный: Java Эффективное программирование, Джошуа Блох;
Чистый код, Роберт Мартин;
OCP Oracle Certified Professional Java SE 11

Алгоритмы и структуры данных:
Книги: Грокаем алгоритмы, Бхаргава Адитья; 
Структуры данных и алгоритмы на Java, Роберт Лафоре
Упражнения: упражнения из Java Core, codewars.com (eng), https://www.hackerrank.com/domains/algorithms (eng)

SQL + JDBC
Видео-курс SQL: https://clck.ru/ZS96v Andrey Sozykin - Основы SQL - YouTube
Видео-курс SQL 2: https://clck.ru/atHAz Заур Трегулов - SQL для начинающих
Упражнения: www.sql-ex.ru, https://sql-academy.org/ru
Видео-курс JDBC: https://clck.ru/atHBf Devcolibri - Базовый курс по JDBC - YouTube
Видео-курс JDBC 2: https://clck.ru/atHC6 Уроки Java - JDBC - YouTube (уроки 183-200)


HTTP, Servlets
Java EE для начинающих от alishev: https://clck.ru/atHCL

Maven, Gradle
Видео-курс Maven: https://clck.ru/atHCW OnFreeTube - Java Tutorials. Сборщик Maven - YouTube
Статьи по Maven: https://habr.com/ru/post/77382/, https://clck.ru/atHCe (https://javarush.com/groups/posts/2523-chastjh-4osnovih-maven)
Видео-курс Gradle (eng): https://clck.ru/atHCs
Статьи по Gradle: https://clck.ru/atHDB, http://spring-projects.ru/guides/gradle/, https://clck.ru/atHDQ, https://clck.ru/atHDg

Spring
Видео-курс по Spring: https://clck.ru/atHDp alishev - Spring Framework
Документация (eng): https://clck.ru/YkRdA
Статьи: https://clck.ru/atHRj https://habr.com/ru/post/490586/

JPA/Hibernate
Видео-курс 1: https://clck.ru/atHRw javabegin - Основы Hibernate + Java/MySQL (архив) - YouTube
Видео-курс 2: https://clck.ru/atHS8 javabegin -  Основы Hibernate с нуля (2021) - YouTube
Книга: Java Persistance with Hibernate
Статьи: 
https://easyjava.ru/data/jpa/, https://clck.ru/atHSQ (https://javarush.com/groups/posts/2259-jpa--znakomstvo-s-tekhnologiey), https://www.baeldung.com/learn-jpa-hibernate (eng)

Тесты
Статьи по JUnit: 
https://javarush.com/groups/posts/605-junit, https://habr.com/ru/company/otus/blog/596033/, https://habr.com/ru/post/120101/
Видео:
https://clck.ru/atHSq, https://clck.ru/atHTG
Отличный канал с уроками, кстати ^

Бонус
Материалы:
https://javarevisited.blogspot.com/#axzz4gWVJPNgI, https://mkyong.com/, https://tproger.ru/digest/java/, https://clck.ru/atHTb ,
https://habr.com/ru/post/132241/, https://www.baeldung.com/, https://habr.com/ru/company/jugru/blog/424503/, https://github.com/akullpp/awesome-java, https://habr.com/ru/company/luxoft/blog/270383/,

Статьи: 
https://proglib.io/p/algorithms-structures-learn, https://clck.ru/atHTt, https://proglib.io/p/8-good-habits,
https://proglib.io/p/open-source-for-novice, https://tproger.ru/translations/where-to-find-ideas/, https://proglib.io/p/27-puzzle-websites-to-sharpen-your-skills




Спасибо за видео и твою работу!!!
Отзыв (+субъектив) от человека, который был на этом пути: 
бэграунд: QA, потом QA auto. 
1. Мне книга Java от HeadFirst - вообще не зашла, какой-то детский сад, но думаю, что если человек не был в IT - будет ок. Гораздо больше мне понравились курс на Udemy от Java с нуля до Junior (но только базовая джава, продвинутая не понравилась там) (Java с нуля от Andrey Sumin? - вроде да) 

Остальные книги именно по джава - тоже прошли мимо меня. Абсолютно уверена, что книги надо читать, когда уже есть "игрушечная" практика по джава кору. 
2. Прокачанная джава от Заур Трегулов - очень хорошо, прям то что нужно, чтобы потом делать более-менее простые, но рабочие задачи. А вот его базовый курс - мне как раз не понравился, когда я только начинала. А по продвинутой - на русском особо лучше ничего не нашла. Спасибо за ссылку! 
3. SQL - думаю тут ничо нового не добавить, классные ссылки, в целом, курсов очень много. Я проходила на степике, но те что по ссылкам тоже классные, спасибо. В вакансиях всё больше PosgreSQL, к тому же его легче установить и проще с ним работать (субъективно), поэтому у меня он. 
4. JDBC - ссылка годная, спасибо. Мне очень понравилось как вводит в эту тему 

alishev в своем курсе Spring Framework (25-27 уроки). Здесь же он прекрасно объясняет CRUD и MVC и протоколы и вводит в JDBC API. По нарастающей, и это прям агонь. Для меня был открытием этот плейлист. 
5. Spring - мне ооооочень понравился курс от Заур Трегулов Spring для начинающих, ну вот серьезно, это так афигенно. По спрингу в этом курсе дается очень толково - всё, что нужно понимать. 
Так же он применяет таймлиф для веба - и это очень годно, в вакансиях его всё больше. 
Я делала так: Заур Трегулов Spring для начинающих с первого урока до урока по Hibernate -> ушла на alishev Spring Framework (с 15 по 27 урок) чтобы понять базу JDBC, CRUD, протоколов -> продолжила Заур Трегулов Spring для начинающих (до конца)
6. Практика: это боль для всех. Ничего лучше настоящих рабочих задач нет и не будет. Не хочу показаться занудой, но джавараш - идет мимо, когда речь заходит о том, что вы будете делать на работе в реальности как джун. Ну и в целом, всё что не от реального ментора и задач -- всё лучше пройти мимо. По мне так это пустая трата время.
Мои коллеги просто искали ментора за деньги. Как таковая - программа не нужна, нужно просто пилить какое-то рабочее (похожее на рабочее) приложение и чтобы кто-то постоянно помогал тебе с затыками и проверял код. 
Я бы стартанула c JDBC курса искать ментора или менторинг. И там рассчитывать еще на пол года тяжелой работы, чтобы дойти до собесов в итоге. 
7. Общие книги, не джава - годный список, спасибо. У меня это такие (все в бумажном виде с авито): грокаем алгоритмы; паттерны проектирования хэд фест; чистый код; карьера программиста (это про то как проходить собесы, там же задачи с собесов на алгоритмы и тд)
По срокам: на такой путь уходит не меньше 10-12 месяцев. Иногда приходится дополнительно до полугода писать свой проект и решать алгоритмы. 
9. Инсайты: смотреть курсы и повторять - время в корзину. Не работает вообще. Я поняла, что рабочий вариант - это смотреть видео, останавливать, повторять что было в видео, НО писать сам проект, названия переменных, названия методов -- свои. Потому что когда пишешь один-в-один как у учителя - то мозги вообще не понимают что делают. Они не включаются. Включаются только когда вы пытаетесь делать свой аналог. Например, на курсе Spring для начинающих вместо того примера что давал Заур (библиотека с книгами) я делала Автомобили, а где были люди - там была библиотека с книгами, и тд. Но это ахренеть как продвинуло меня в понимании что вообще происходит...До этого я просто повторяла все названия за лектором и потом удивлялась что решить задания не могу вообще. 
P.S. по ощущениям, после 30 лет книжки, просмотр видосиков - не работает, и концепции по теории не схватываются мозгами вообще, хотя не сказать, что я так заморозила мозги прям. Работает практика, причем сразу и желательно, чтобы ее кто-то давал. Самое идеальное - сразу проект, который пишется сначала на простых концепциях, например приложение где вместо базы данных - просто список. КАк было у  alishev, затем переписываем это же приложение уже на JDBC, потом на Hibernet




1. дойти до конца курса по продвинутой (джаве как я понимаю, еще не спринг) 2. пойти писать задачи на чистой джаве (решить 4 сложных задачи, дальше скажу откуда можно взять). 3. пойти смотреть и повторять (но своими именами и примерами) курс спринга заура (одновременно там же можно потыкать sql параллельно) 4. Идти делать мини проекты и проекты. 
5. Когда начали проект - начать собирать вопросы для собесов и их готовить. Через 1-2 мес идти на собесы в не самые крутые конторы, чтобы оказаться там полным лузером, но понять а что там вообще спрашивают. Это важно. 6. В рамках подготовки к собесам вам в любом случае придется пытаться решать алгоритмы. По ним есть базовые курсы на степике. И в ходе подготовки к собесам можно читать книги. Раньше - я даже не смотрела их. 
_______
Теперь по задачам. Смотрите, есть такой менторинг от rs.school (это колобарация епама, джетбрейнса и тд), вот они выкладывают свои задания и требования на гитхабе в своем репозитории. Вроде как спринга там нет, но есть андроид (смотря какое ваше направление). Так, если сказать навскидку, то нужно в начале делать такие задачи как "Аннограмма", "Деление в столбик", и задачи которые хорошо тренят коллекции, стримы (напишите мне в личку). Это база которая дается на всех курсах с метором, в том числе и на рс скул. Вот такие большие задачи прокачивают базу джавы. Там всего задачи 3-4 таких. Но вам уже на задачах нужен ментор, тот к кому вы постоянно будете приставать. Так будет быстро и эффективно. Без ментора будет медленно, прям очень медленно. Ментора, в принципе, можно найти на сайте профи.ру, на сайтах фриланса так же, ну и на линкедин (или знакомства). 
Далее идет уже проект (мини проекты) на спринге. Если это андроид - смело можете брать задачи рс.скул, если это спринг - здесь придется поискать в инете что можно сделать модульно, или поспрашивать менторов. Я так же заходила просто на апворк (там лучше описывают задачи) и смотрела что можно сделать. Некоторые челы там прям давали полноценные интересные задачи. Еще я смотрела на хх тестовые задачи. Это тоже весьма похоже на полноценные мини-проекты.
